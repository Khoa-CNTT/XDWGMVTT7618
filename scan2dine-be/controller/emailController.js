// controllers/emailController.js
const Imap = require('imap');
const { simpleParser } = require('mailparser');
const moment = require('moment');
const cheerio = require('cheerio');
require('dotenv').config();

// C·∫•u h√¨nh k·∫øt n·ªëi IMAP
const imap = new Imap({
  user: process.env.EMAIL_USER,
  password: process.env.EMAIL_PASS,
  host: 'imap.gmail.com',
  port: 993,
  tls: true,
  tlsOptions: { rejectUnauthorized: false },
});

function getLatestEmail(req, res) {
  imap.once('ready', function () {
    imap.openBox('INBOX', false, function (err, box) {
      if (err) {
        return res.status(500).json({ error: 'Kh√¥ng th·ªÉ k·∫øt n·ªëi t·ªõi h·ªôp th∆∞.' });
      }

      console.log('‚úÖ ƒêang theo d√µi h·ªôp th∆∞ ƒë·∫øn...');

      imap.on('mail', function () {
        const today = moment().startOf('day');
        
        // T√¨m email c√≥ ti√™u ƒë·ªÅ "SACOMBANK THONG BAO GIAO DICH PHAT SINH" t·ª´ h√¥m nay tr·ªü ƒëi
        imap.search([["SINCE", today.format("DD-MMM-YYYY")], ["SUBJECT", "SACOMBANK THONG BAO GIAO DICH PHAT SINH"]], function (err, results) {
          if (err || !results || results.length === 0) {
            console.log("üì≠ Kh√¥ng c√≥ email m·ªõi h√¥m nay");
            return res.status(200).json({ message: 'Kh√¥ng c√≥ email m·ªõi h√¥m nay.' });
          }

          const lastEmail = results[results.length - 1];
          const f = imap.fetch(lastEmail, { bodies: "" });

          f.on('message', function (msg) {
            msg.on('body', function (stream) {
              simpleParser(stream, async (err, parsed) => {
                const { subject, date, text, html } = parsed;
                const mailTime = moment(date);

                // Ki·ªÉm tra email c√≥ ph·∫£i h√¥m nay kh√¥ng v√† ti√™u ƒë·ªÅ ch√≠nh x√°c
                if (mailTime.isSame(today, "day") && subject === "SACOMBANK THONG BAO GIAO DICH PHAT SINH") {
                  const $ = cheerio.load(html);  // T·∫£i HTML c·ªßa email v√†o cheerio
                  const transaction = $('td:contains("Ph√°t sinh")').next().text().trim();  // T√¨m giao d·ªãch
                  const availableBalance = $('td:contains("S·ªë d∆∞ kh·∫£ d·ª•ng")').next().text().trim();  // T√¨m s·ªë d∆∞ kh·∫£ d·ª•ng
                  const transactionDescription = $('td:contains("N·ªôi dung")').next().text().trim(); // T√¨m n·ªôi dung giao d·ªãch

                  // Tr·∫£ v·ªÅ d·ªØ li·ªáu d∆∞·ªõi d·∫°ng JSON
                  res.status(200).json({
                    subject,
                    mailTime: mailTime.format('HH:mm:ss'),
                    transaction,
                    availableBalance,
                    transactionDescription
                  });
                } else {
                  return res.status(200).json({ message: 'Kh√¥ng c√≥ giao d·ªãch m·ªõi t·ª´ Sacombank.' });
                }
              });
            });
          });
        });
      });
    });
  });

  imap.once('error', function (err) {
    console.log('‚ùå L·ªói:', err);
    return res.status(500).json({ error: 'L·ªói k·∫øt n·ªëi IMAP.' });
  });

  imap.once('end', function () {
    console.log('üõë Ng·∫Øt k·∫øt n·ªëi');
  });

  imap.connect();
}

module.exports = {
  getLatestEmail,
};
