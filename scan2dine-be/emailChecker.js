// const Imap = require("imap");
// const { simpleParser } = require("mailparser");
// const moment = require("moment");
// require("dotenv").config();

// const imap = new Imap({
//   user: process.env.EMAIL_USER,
//   password: process.env.EMAIL_PASS,
//   host: "imap.gmail.com",
//   port: 993,
//   tls: true,
//   tlsOptions: { rejectUnauthorized: false },
// });

// // üëâ H√†m x·ª≠ l√Ω khi c√≥ email m·ªõi
// function openInbox(cb) {
//   imap.openBox("INBOX", false, cb);
// }

// imap.once("ready", function () {
//   openInbox(function (err, box) {
//     if (err) throw err;

//     console.log("‚úÖ ƒêang theo d√µi h·ªôp th∆∞ ƒë·∫øn...");

//     imap.on("mail", function () {
//       const today = moment().startOf("day");

//       // T√¨m mail t·ª´ h√¥m nay tr·ªü ƒëi
//       imap.search([["SINCE", today.format("DD-MMM-YYYY")]], function (err, results) {
//         if (err || !results || results.length === 0) {
//           console.log("üì≠ Kh√¥ng c√≥ email m·ªõi h√¥m nay");
//           return;
//         }

//         const f = imap.fetch(results, { bodies: "" });

//         f.on("message", function (msg) {
//           msg.on("body", function (stream) {
//             simpleParser(stream, async (err, parsed) => {
//               const { subject, date, text } = parsed;
//               const mailTime = moment(date);

//               // Ki·ªÉm tra email c√≥ ph·∫£i h√¥m nay kh√¥ng
//               if (mailTime.isSame(today, "day")) {
//                 console.log("üì© Email m·ªõi:");
//                 console.log("Ti√™u ƒë·ªÅ:", subject);
//                 console.log("Th·ªùi gian:", mailTime.format("HH:mm:ss"));
//                 console.log("N·ªôi dung:\n", text);
//                 console.log("‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n");
//               }
//             });
//           });
//         });
//       });
//     });
//   });
// });

// imap.once("error", function (err) {
//   console.log("‚ùå L·ªói:", err);
// });

// imap.once("end", function () {
//   console.log("üõë Ng·∫Øt k·∫øt n·ªëi");
// });

// // ‚úÖ K·∫øt n·ªëi duy nh·∫•t
// imap.connect();
const Imap = require("imap");
const { simpleParser } = require("mailparser");
const moment = require("moment");
const cheerio = require("cheerio");  // C√†i ƒë·∫∑t cheerio ƒë·ªÉ ph√¢n t√≠ch HTML
require("dotenv").config();

const imap = new Imap({
  user: process.env.EMAIL_USER,
  password: process.env.EMAIL_PASS,
  host: "imap.gmail.com",
  port: 993,
  tls: true,
  tlsOptions: { rejectUnauthorized: false },
});

// üëâ H√†m x·ª≠ l√Ω khi c√≥ email m·ªõi
function openInbox(cb) {
  imap.openBox("INBOX", false, cb);
}

imap.once("ready", function () {
  openInbox(function (err, box) {
    if (err) throw err;

    console.log("‚úÖ ƒêang theo d√µi h·ªôp th∆∞ ƒë·∫øn...");

    imap.on("mail", function () {
      const today = moment().startOf("day");

      // T√¨m email c√≥ ti√™u ƒë·ªÅ "SACOMBANK THONG BAO GIAO DICH PHAT SINH" t·ª´ h√¥m nay tr·ªü ƒëi
      imap.search([["SINCE", today.format("DD-MMM-YYYY")], ["SUBJECT", "SACOMBANK THONG BAO GIAO DICH PHAT SINH"]], function (err, results) {
        if (err || !results || results.length === 0) {
          console.log("üì≠ Kh√¥ng c√≥ email m·ªõi h√¥m nay");
          return;
        }

        // L·∫•y email cu·ªëi c√πng trong danh s√°ch k·∫øt qu·∫£
        const lastEmail = results[results.length - 1];
        const f = imap.fetch(lastEmail, { bodies: "" });

        f.on("message", function (msg) {
          msg.on("body", function (stream) {
            simpleParser(stream, async (err, parsed) => {
              const { subject, date, text, html } = parsed;
              const mailTime = moment(date);

              // Ki·ªÉm tra email c√≥ ph·∫£i h√¥m nay kh√¥ng v√† ti√™u ƒë·ªÅ ch√≠nh x√°c
              if (mailTime.isSame(today, "day") && subject === "SACOMBANK THONG BAO GIAO DICH PHAT SINH") {
                console.log("üì© Email m·ªõi:");
                console.log("Ti√™u ƒë·ªÅ:", subject);
                console.log("Th·ªùi gian:", mailTime.format("HH:mm:ss"));

                // S·ª≠ d·ª•ng cheerio ƒë·ªÉ x·ª≠ l√Ω HTML v√† t√¨m c√°c tr∆∞·ªùng trong form
                const $ = cheerio.load(html);  // T·∫£i HTML c·ªßa email v√†o cheerio
                const transaction = $('td:contains("Ph√°t sinh")').next().text().trim();  // T√¨m giao d·ªãch
                const availableBalance = $('td:contains("S·ªë d∆∞ kh·∫£ d·ª•ng")').next().text().trim();  // T√¨m s·ªë d∆∞ kh·∫£ d·ª•ng
                const transactionDescription = $('td:contains("N·ªôi dung")').next().text().trim(); // T√¨m n·ªôi dung giao d·ªãch

                // Ki·ªÉm tra v√† hi·ªÉn th·ªã c√°c gi√° tr·ªã
                if (transaction && availableBalance && transactionDescription) {
                  console.log("Giao d·ªãch:", transaction);
                  console.log("S·ªë d∆∞ kh·∫£ d·ª•ng:", availableBalance);
                  console.log("N·ªôi dung giao d·ªãch:", transactionDescription);
                } else {
                  console.log("‚ùå Kh√¥ng t√¨m th·∫•y th√¥ng tin giao d·ªãch, s·ªë d∆∞ ho·∫∑c n·ªôi dung.");
                }

                // L·ªçc th√™m th√¥ng tin kh√°c n·∫øu c·∫ßn
                const formFields = [];
                $("form input, form textarea").each(function() {
                  formFields.push({
                    name: $(this).attr("name"),
                    value: $(this).val(),
                  });
                });
                console.log("C√°c tr∆∞·ªùng trong form: ", formFields);
                console.log("‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n");
              }
            });
          });
        });
      });
    });
  });
});

imap.once("error", function (err) {
  console.log("‚ùå L·ªói:", err);
});

imap.once("end", function () {
  console.log("üõë Ng·∫Øt k·∫øt n·ªëi");
});

// ‚úÖ K·∫øt n·ªëi duy nh·∫•t
imap.connect();





